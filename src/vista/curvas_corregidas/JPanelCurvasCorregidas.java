/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.curvas_corregidas;

import controlador.CtrAdminCorrecionesMedida;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import vista.medidas.*;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelo.CurvaCorregida;
import modelo.FormatoFichero;
import modelo.FormatoFicheroFactory;
import modelo.Importador;
import vista.JFramePrincipal;
import vista.ViewAdminCorreccionesMedida;

import vista.correccion.JDialogConfiguracionCorreccion;

/**
 *
 * @author EzequielRodriguez
 */
public class JPanelCurvasCorregidas extends javax.swing.JPanel implements ViewAdminCorreccionesMedida {
    private JFramePrincipal prin;
    private JDialogConfiguracionCorreccion jDialogConfiguracionCorreccion;
    private JFileChooser fc;

    /**
     * Creates new form JPanelCurvas
     */
    public JPanelCurvasCorregidas(JFramePrincipal p) {
        //jTable1.setRowSelectionAllowed(true);
        initComponents();
        prin=p;
        String ffCmp = Importador.EXTENSION_COMPRIMIDO;
        fc = new JFileChooser();
        fc.setDialogTitle("Selecciona el fichero con el módulo");
        FormatoFichero ff = (new FormatoFicheroFactory()).create(FormatoFicheroFactory.FORMATO_CAMPAÑA);
        String filterName = "Módulos (." + ffCmp +", " + ff.getExtension() + ")";
        fc.setFileFilter(new FileNameExtensionFilter(filterName, ffCmp, ff.getExtension()));
        fc.setMultiSelectionEnabled(false);
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox<>();
        Exportar = new javax.swing.JButton();
        Borrar = new javax.swing.JButton();
        Grafica = new javax.swing.JButton();
        Medidas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jTable1 = new javax.swing.JTable();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Exportar.setText("Exportar");
        Exportar.setEnabled(false);

        Borrar.setText("Borrar");
        Borrar.setEnabled(false);

        Grafica.setText("Grafica");
        Grafica.setEnabled(false);

        Medidas.setText("Medidas");
        Medidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedidasActionPerformed(evt);
            }
        });

        jTable1.setModel(new TableModelMedidas());
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Medidas)
                    .addComponent(Grafica, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Exportar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Borrar, Exportar, Grafica, Medidas});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Exportar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Borrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Grafica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Medidas)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Borrar, Exportar, Grafica, Medidas});

    }// </editor-fold>//GEN-END:initComponents

    private void MedidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedidasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MedidasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Borrar;
    private javax.swing.JButton Exportar;
    private javax.swing.JButton Grafica;
    private javax.swing.JButton Medidas;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mostrar(CurvaCorregida[] correcciones) {
        jTable1.setModel(new TableModelMedidasCorregidas(correcciones));
    }

    @Override
    public void habilitarBorrar(boolean b) {
        Borrar.setEnabled(b);
    }

    @Override
    public void habilitarGrafica(boolean b) {
        Grafica.setEnabled(b);
    }

    @Override
    public void habilitarExportar(boolean b) {
        Exportar.setEnabled(b);
    }

    @Override
    public void setControlador(CtrAdminCorrecionesMedida ctr) {
        Exportar.setActionCommand(ViewAdminCorreccionesMedida.Cmd.EXPORTAR.toString());
        Borrar.setActionCommand(ViewAdminCorreccionesMedida.Cmd.BORRAR.toString());
        Grafica.setActionCommand(ViewAdminCorreccionesMedida.Cmd.GRAFICA.toString());
        Medidas.setActionCommand(ViewAdminCorreccionesMedida.Cmd.MEDIDAS.toString());
        Exportar.addActionListener(ctr);
        Borrar.addActionListener(ctr);
        Grafica.addActionListener(ctr);
        Medidas.addActionListener(ctr);
        jTable1.getSelectionModel().addListSelectionListener(ctr);
    }

    @Override
    public void vistaAnterior() {
        prin.anteriorPanel();
    }

    @Override
    public CurvaCorregida getCurvaSeleccionada() {
        TableModelMedidasCorregidas tm = (TableModelMedidasCorregidas) jTable1.getModel();
        
        return tm.getMedida(jTable1.getSelectedRow());
    }

    @Override
    public File mostrarSelectorFicheroNuevo() {
        int returnVal = fc.showSaveDialog(prin);
        File f = null;
        
        if (returnVal == JFileChooser.APPROVE_OPTION)
            f = fc.getSelectedFile();
        
        return f;
    }

    @Override
    public void mostrarMensajeSuccess(String mensaje) {
        JOptionPane.showMessageDialog(prin, mensaje);
    }
    
    

}
